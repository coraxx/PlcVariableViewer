<Window x:Class="TwinCatVariableViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TwinCatVariableViewer"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="TwinCat Variable Viewer" Height="650" Width="1080"
        Loaded="MainWindow_OnLoaded">
	
	<Window.Resources>
		<local:BoolToValueConverter x:Key="BoolToValueConverter"/>
		<local:IndexConverter x:Key="IndexConverter"/>
		<local:ValueToVisibilityConverter x:Key="ValueToVisibilityConverter"/>
		<Color x:Key="AccentColor">#0574C5</Color>
		<Color x:Key="BackgroundColor">#FF343434</Color>
		<Color x:Key="ForegroundColor">#FFEEEEEE</Color>
		<Color x:Key="BackgroundLightColor">#FF888888</Color>
		<SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
		<SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}" />
		<SolidColorBrush x:Key="BackgroundLightBrush" Color="{StaticResource BackgroundLightColor}" />
		<SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />

		<Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
			<Style.Triggers>
				<!-- Color of the item depending on percentage value. -->
				<!--<DataTrigger Binding="{Binding CurrentValue, Converter={StaticResource BoolToValueConverter}}" Value="1" >
					<Setter Property="Background" Value="GreenYellow" />
				</DataTrigger>

				<DataTrigger Binding="{Binding CurrentValue, Converter={StaticResource BoolToValueConverter}}" Value="0" >
					<Setter Property="Background" Value="LightGray" />
				</DataTrigger>-->

				<!-- Style for the selecting item -->
				<Trigger Property="IsSelected" Value="true">
					<Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
					<Setter Property="Foreground" Value="White"/>
				</Trigger>
				<!-- Style for the item when the mouse is over -->
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
					<Setter Property="BorderBrush" Value="White" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Storyboard x:Key="SpinnerAnimation">
			<DoubleAnimation Storyboard.TargetName="SpinnerRotateTransform" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="00:00:01" RepeatBehavior="Forever"/>
		</Storyboard>
	</Window.Resources>

	<Grid x:Name="RootGrid" Background="{StaticResource BackgroundBrush}">
		<Grid.RowDefinitions>
			<RowDefinition Height="35"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="40"/>
			<RowDefinition Height="10"/>
		</Grid.RowDefinitions>
		<Grid Grid.Row="0" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="60"/>
				<ColumnDefinition Width="100"/>
			</Grid.ColumnDefinitions>
			<TextBox x:Name="TextBox1" Grid.Column="0" Height="20" KeyUp="TextBox1_OnKeyUp" Margin="10,10,5,0" Background="{StaticResource BackgroundLightBrush}"/>
			<Button Grid.Column="1" Content="Filter" Height="20" Margin="5,10,5,0" Click="ButtonFilter_OnClick"/>
			<ComboBox x:Name="ComboBoxPlc" Grid.Column="2" Height="20" Margin="5,10,10,0" SelectionChanged="ComboBoxPlc_OnSelectionChanged"/>
		</Grid>
		<ListView x:Name="SymbolListView" Grid.Row="1" SelectionMode="Single" Style="{x:Null}" Margin="10,5,10,10" Background="{StaticResource BackgroundLightBrush}"
		          ItemContainerStyle="{StaticResource ListViewItemStyle}" ItemsSource="{Binding SymbolListViewItems}">
			<ListView.View>
				<GridView>

					<GridViewColumn Header="" Width="50"
					                DisplayMemberBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}}" />

					<GridViewColumn Header="Path" Width="450">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Path, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Margin="0"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Header="Type" Width="100">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Type, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Margin="0"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Header="Size" Width="50">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Size, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Margin="0"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Header="Index Group" Width="100">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding IndexGroup, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Margin="0"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Header="Index Offset" Width="100">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding IndexOffset, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Margin="0"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<!--<GridViewColumn Header="Is Static" Width="50">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding IsStatic, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Margin="0"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>-->

					<GridViewColumn Header="Current Value" Width="150">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding CurrentValue, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Margin="0"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</ListView.View>
		</ListView>

		<Grid Grid.Row="2" HorizontalAlignment="Right" Width="{Binding ActualWidth, ElementName=RootGrid}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="45"/>
				<ColumnDefinition Width="10"/>
				<ColumnDefinition Width="120"/>
			</Grid.ColumnDefinitions>
			<TextBlock x:Name="TextBlockDumpStatus" Grid.Column="0" Foreground="AliceBlue" FontSize="16" Height="25" Margin="10,0,0,0"/>
			<Ellipse x:Name="Spinner" Grid.Column="2" StrokeThickness="1" RenderTransformOrigin="0.5,0.5" Height="40" Width="40" Visibility="Hidden">
				<Ellipse.Stroke>
					<RadialGradientBrush
						GradientOrigin="0.5,0.5"
						Center="0,0">
						<RadialGradientBrush.GradientStops>
							<GradientStop Color="White" Offset="0" />
							<GradientStop Color="{StaticResource AccentColor}" Offset="0.7" />
						</RadialGradientBrush.GradientStops>
					</RadialGradientBrush>
				</Ellipse.Stroke>
				<Ellipse.RenderTransform>
					<TransformGroup>
						<RotateTransform x:Name="SpinnerRotateTransform" />
					</TransformGroup>
				</Ellipse.RenderTransform>
			</Ellipse>
			<Button x:Name="ButtonDumpData" Grid.Column="4" Content="Dump all to file" Height="40" Click="ButtonDumpData_OnClick" Margin="0,0,10,0"/>
			<Button x:Name="ButtonReconnect" Grid.Column="4" Content="Reconnect" Height="40" Click="ButtonReconnect_OnClick" Margin="0,0,10,0" Background="DarkOrchid" Foreground="AliceBlue"
			        FontSize="16" FontWeight="Bold" Visibility="{Binding PlcConnected, Converter={StaticResource ValueToVisibilityConverter}, ConverterParameter=Invert}"/>
		</Grid>
	</Grid>
</Window>

